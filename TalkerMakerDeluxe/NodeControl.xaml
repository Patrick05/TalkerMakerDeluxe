<UserControl x:Name="NodeController" x:Class="TalkerMakerDeluxe.NodeControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:s="clr-namespace:TalkerMakerDeluxe;assembly=TalkerMakerDeluxe"
			 xmlns:fa="http://schemas.fontawesome.io/icons/"
			 mc:Ignorable="d" Height="Auto" Width="202" DataContext="{Binding ElementName=NodeController, Path=boundEntry}">
	<Border x:Name="border" BorderBrush="{StaticResource ResourceKey=HighlightBrush}" BorderThickness="2" CornerRadius="2">
		<Grid Name="grid" Background="{StaticResource ResourceKey=GrayBrush1}" MouseLeftButtonUp="Grid_MouseLeftButtonUp">
			<Grid.RowDefinitions>
				<RowDefinition Height="26" MaxHeight="26" />
				<RowDefinition>
					<RowDefinition.Style>
						<Style TargetType="{x:Type RowDefinition}">
							<Setter Property="Height" Value="28" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=logicNode}" Value="true">
									<Setter Property="Height" Value="0"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</RowDefinition.Style>
				</RowDefinition>
				<RowDefinition Name="grdNodeImage">
					<RowDefinition.Style>
						<Style TargetType="{x:Type RowDefinition}">
							<Setter Property="Height" Value="28" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=logicNode}" Value="true">
									<Setter Property="Height" Value="0"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</RowDefinition.Style>
				</RowDefinition>
				<RowDefinition Name="grdNodeText" Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock Foreground="{DynamicResource GrayBrush2}" TextTrimming="CharacterEllipsis" x:Name="lblDialogueName" Grid.Row="0" Text="{Binding title}" Margin="6,6,60,0" VerticalAlignment="Top" Background="{x:Null}" FontSize="11" FontWeight="Bold"/>
			<Button x:Name="btnAdd" ToolTip="Add Child Dialogue" HorizontalAlignment="Right" VerticalAlignment="Top" Width="24" Height="24" Margin="0" FontFamily="FontAwesome" Background="Transparent" BorderBrush="Transparent" Click="btnAdd_Click" Grid.Row="0">
				<Button.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Background" Value="Green"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Border Background="{TemplateBinding Background}">
										<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" Value="Transparent"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="Transparent"/>
							</Trigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
				<fa:FontAwesome Name="faAdd" Icon="PlusSquare" />
			</Button>
			<fa:FontAwesome Name="faLink" Icon="Chain" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,7,0" Background="Transparent" Foreground="{StaticResource ResourceKey=BlackBrush}" Opacity="0.5" Grid.Row="0" Visibility="Hidden" />
			<Border Name="brdDialogue" BorderThickness="1" BorderBrush="{StaticResource ResourceKey=WhiteBrush}" Background="{DynamicResource HighlightBrush}" Padding="5" CornerRadius="2" Margin="2,2,2,2" Grid.Row="3" MinWidth="194">
				<Border.Style>
					<Style TargetType="{x:Type Border}">
						<Setter Property="Visibility" Value="Visible"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding Path=dialogueText.Length}" Value="0">
								<Setter Property="Height" Value="0"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Border.Style>
				<TextBlock x:Name="txtDialogue" Padding="4" Text="{Binding dialogueText}" TextWrapping="Wrap" Foreground="Black" />
			</Border>
			<TextBlock Foreground="{DynamicResource GrayBrush2}" TextTrimming="CharacterEllipsis" x:Name="lblActor" Grid.Row="1" FontWeight="Bold" Text="{Binding actor.name}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14" Margin="6,0,60,0" />
			<TextBlock TextTrimming="CharacterEllipsis" x:Name="lblConversant" Grid.Row="1" FontWeight="Thin" Text="{Binding conversant.name}" HorizontalAlignment="Right" MaxWidth="65"  VerticalAlignment="Top" FontSize="10" Margin="0,0,6,0" />
			<TextBlock Foreground="{DynamicResource GrayBrush2}" TextTrimming="CharacterEllipsis" x:Name="lblMenuText" Text="{Binding menuText}" FontStyle="Italic" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center" Width="152" Margin="0,6" />
			<Border BorderBrush="{StaticResource ResourceKey=HighlightBrush}" Background="SlateGray" BorderThickness="1" Height="28" Width="28" MaxHeight="40" MaxWidth="35" Grid.Row="2" HorizontalAlignment="Left" Margin="8,0">
				<Image Name="imgActor" Source="{Binding actor.picture}" />
			</Border>
			<Label x:Name="lblUserScript" Content="" HorizontalAlignment="Right" HorizontalContentAlignment="Right" VerticalAlignment="Top" Width="28" Visibility="Hidden"/>
			<Label x:Name="lblConditionsString" Content="" HorizontalAlignment="Right" HorizontalContentAlignment="Right" VerticalAlignment="Top" Width="28" Visibility="Hidden"/>
			<Button HorizontalAlignment="Right" Name="btnMin" VerticalAlignment="Bottom" Width="10" Height="10" Padding="0" Background="Transparent" BorderBrush="Transparent" Margin="0,0,-6,-6" Grid.RowSpan="4" Click="btnMin_Click">
				<Button.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Background" Value="Green"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Border Background="{TemplateBinding Background}">
										<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" Value="Transparent"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="Transparent"/>
							</Trigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
				<StackPanel Orientation="Horizontal">
					<fa:ImageAwesome Icon="Circle" Foreground="{StaticResource ResourceKey=WhiteBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8" />
					<fa:ImageAwesome Panel.ZIndex="1" Name="faMin" Icon="ChevronCircleUp" Foreground="{StaticResource ResourceKey=BlackBrush}" Margin="-9,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="10" />
				</StackPanel>
			</Button>
			<Label x:Name="lblExternal" Foreground="{StaticResource ResourceKey=WhiteBrush}" HorizontalAlignment="Right"  Margin="0,0,44,-12" Grid.RowSpan="4" Height="18" VerticalAlignment="Bottom" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" Width="16" ScrollViewer.VerticalScrollBarVisibility="Disabled" Visibility="Hidden">
				<Border BorderBrush="Black" BorderThickness="0" Background="{StaticResource ResourceKey=BlackBrush}">
					<Border.Style>
						<Style TargetType="{x:Type Border}">
							<Setter Property="Visibility" Value="Visible"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ConditionsString.Length}" Value="0">
									<Setter Property="Visibility" Value="Hidden"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Border.Style>
					<fa:FontAwesome Name="faLinks" Icon="ExternalLink" VerticalAlignment="Center" Padding="1" FontSize="11" />
				</Border>
			</Label>
			<Label x:Name="lblConditional" Foreground="{StaticResource ResourceKey=WhiteBrush}" HorizontalAlignment="Right"  Margin="0,0,28,-12" Grid.RowSpan="4" Height="18" VerticalAlignment="Bottom" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" Width="16" ScrollViewer.VerticalScrollBarVisibility="Disabled">
				<Border BorderBrush="Black" BorderThickness="0" Background="{StaticResource ResourceKey=BlackBrush}">
					<Border.Style>
						<Style TargetType="{x:Type Border}">
							<Setter Property="Visibility" Value="Visible"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ConditionsString.Length}" Value="0">
									<Setter Property="Visibility" Value="Hidden"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Border.Style>
					<fa:FontAwesome Name="faFork" Icon="CodeFork" VerticalAlignment="Center" Padding="1" FontSize="11" />
				</Border>
			</Label>
			<Label x:Name="lblCode" Foreground="{StaticResource ResourceKey=WhiteBrush}" HorizontalAlignment="Right"  Margin="0,0,12,-12" Grid.RowSpan="4" Height="18" VerticalAlignment="Bottom" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" Width="16" ScrollViewer.VerticalScrollBarVisibility="Disabled">
				<Border Background="{StaticResource ResourceKey=BlackBrush}">
					<Border.Style>
						<Style TargetType="{x:Type Border}">
							<Setter Property="Visibility" Value="Visible"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=UserScript.Length}" Value="0">
									<Setter Property="Visibility" Value="Hidden"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Border.Style>
					<fa:FontAwesome Name="faCode" Icon="Code" VerticalAlignment="Center" Padding="1" FontSize="11" />
				</Border>
			</Label>
		</Grid>
	</Border>
</UserControl>
